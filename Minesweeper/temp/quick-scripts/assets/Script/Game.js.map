{"version":3,"sources":["Game.js"],"names":["GAME_STATE","cc","Enum","PREPARE","PLAY","WIN","DEAD","TOUCH_STATE","BLANK","FLAG","DOUBT","Class","extends","Component","properties","tilesLayout","Node","tile","Prefab","btnStart","tiles","picPrepare","SpriteFrame","picPlay","picWin","picDead","gameState","default","type","touchState","row","col","bombNum","onLoad","Tile","require","self","r","c","genTile","instantiate","name","String","on","EventType","MOUSE_UP","event","getButton","Event","EventMouse","BUTTON_LEFT","BUTTON_RIGHT","addChild","push","newGame","thilesLength","length","n","getComponent","ClickType","TYPE","ZERO","state","STATE","NONE","tilesIndex","i","b","Math","floor","random","BOMB","splice","tempBomb","roundTiles","tileRound","m","Sprite","start"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["const GAME_STATE = cc.Enum({\r\n    PREPARE: 0,\r\n    PLAY: 1,\r\n    WIN: 2,\r\n    DEAD: 3\r\n});\r\nconst TOUCH_STATE = cc.Enum({\r\n    BLANK: 0,\r\n    FLAG: 1,\r\n    DOUBT: 2\r\n});\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        tilesLayout: cc.Node,\r\n        tile: cc.Prefab,\r\n        btnStart: cc.Node,\r\n        tiles: [], // 用数组保存所有tile引用\r\n        picPrepare: cc.SpriteFrame,\r\n        picPlay: cc.SpriteFrame,\r\n        picWin: cc.SpriteFrame,\r\n        picDead: cc.SpriteFrame,\r\n\r\n        gameState: {\r\n            default: GAME_STATE.PREPARE,\r\n            type: GAME_STATE,\r\n        },\r\n        touchState: {// 左键点开方块，右键标记flag，flag状态下再右键一次Doubt\r\n            default: TOUCH_STATE.BLANK,\r\n            type: TOUCH_STATE\r\n        },\r\n        row: 0,\r\n        col: 0,\r\n        bombNum: 0,\r\n\r\n    },\r\n\r\n    onLoad: function () {\r\n        this.Tile = require(\"Blank\"); // 获得Blank脚本中的状态量：STATE,TYPE\r\n        let self = this; // 将this赋值给self，好处就是在回调函数中self依旧对应的是this\r\n        for (let r = 0; r < this.row; r++) {\r\n            for (let c = 0; c < this.col; c++) {\r\n                let genTile = cc.instantiate(this.tile);\r\n                genTile.name = String(r * this.col + c); // 必须为 字符串 类型，否则会出错，将生成的方块名字命名为在 tiles数组 中的下标\r\n                genTile.on(cc.Node.EventType.MOUSE_UP, function (event) {\r\n                    // 对每一个生成的方块都开启 鼠标事件监听\r\n                    if (event.getButton() === cc.Event.EventMouse.BUTTON_LEFT) {\r\n                        self.touchState = TOUCH_STATE.BLANK;\r\n                    } else if (event.getButton() === cc.Event.EventMouse.BUTTON_RIGHT) {\r\n                        if (self.touchState === TOUCH_STATE.BLANK) {\r\n                            self.touchState = TOUCH_STATE.FLAG;\r\n                        }\r\n                        if (self.touchState === TOUCH_STATE.FLAG) {\r\n                            self.touchState = TOUCH_STATE.DOUBT;\r\n                        } else self.touchState = TOUCH_STATE.BLANK;\r\n                    }\r\n                    //self.onTouchTile(this); // 该函数还没写先注释，这时候这里的this又是啥？？？\r\n                });\r\n                this.tilesLayout.addChild(genTile);\r\n                this.tiles.push(genTile);\r\n            }\r\n        }\r\n        this.newGame();\r\n    },\r\n\r\n    newGame: function () {\r\n        let thilesLength = this.tiles.length;\r\n        // 初始化场景\r\n        for (let n = 0; n < thilesLength; n++) {\r\n            this.tiles[n].getComponent(\"Blank\").ClickType = this.Tile.TYPE.ZERO;\r\n            this.tiles[n].getComponent(\"Blank\").state = this.Tile.STATE.NONE;\r\n        }\r\n        // 添加雷\r\n        let tilesIndex = [];\r\n        for (let i = 0; i < thilesLength; i++) {\r\n            tilesIndex[i] = i; // 初始化方块数组，然后雷将随机填入其中，一维数组表示二维地图\r\n        }\r\n        for (let b = 0; b < this.bombNum; b++) {\r\n            let n = Math.floor(Math.random() * tilesIndex.length); // 随机炸弹位置\r\n            this.tiles[tilesIndex[n]].getComponent(\"Blank\").ClickType = this.Tile.TYPE.BOMB;\r\n            tilesIndex.splice(n, 1); // 删除第 n 个位置一个元素，避免重复放雷\r\n        }\r\n        // 标记雷周围的方块\r\n        for (let n = 0; n < thilesLength; n++) {\r\n            let tempBomb = 0;\r\n            if (this.tiles[n].getComponent(\"Blank\").ClickType == this.Tile.TYPE.ZERO) {\r\n                let roundTiles = this.tileRound(n);\r\n                for (let m = 0; m < roundTiles.length; m++) {\r\n                    if (roundTiles[m].getComponent(\"Blank\").ClickType == this.Tile.TYPE.BOMB) {\r\n                        tempBomb++;\r\n                    }\r\n                }\r\n                this.tiles[n].getComponent(\"Blank\").ClickType = tempBomb; // 周围有多少雷就标记几\r\n            }\r\n        }\r\n        this.gameState = GAME_STATE.PLAY;\r\n        this.btnStart.getComponent(cc.Sprite).SpriteFrame = this.picPlay;\r\n    },\r\n\r\n    // 返回 name 为 n 的 tile 的周围 tile 数组\r\n    tileRound: function (n) {// col表明每排有几个元素\r\n        // Math.floor(n/this.row)==15的时候就是最后一行了，n%this.col==29时就是最后一列\r\n        // 这里逻辑不能出错，一出错就运行失败\r\n        let roundTiles = [];\r\n        if (n % this.col > 0) {//left\r\n            roundTiles.push(this.tiles[n - 1]);\r\n        }\r\n        if (n % this.col < this.col - 1) {// right\r\n            roundTiles.push(this.tiles[n + 1]);\r\n        }\r\n        if (Math.floor(n / this.col) < this.row - 1) {// bottom\r\n            roundTiles.push(this.tiles[n + this.col]);\r\n        }\r\n        if (Math.floor(n / this.col) > 0) {// top\r\n            roundTiles.push(this.tiles[n - this.col]);\r\n        }\r\n        if (n % this.col > 0 && Math.floor(n / this.col) > 0) {// 左上\r\n            roundTiles.push(this.tiles[n - this.col - 1]);\r\n        }\r\n        if (n % this.col > 0 && Math.floor(n / this.col) < this.row - 1) {// 左下\r\n            roundTiles.push(this.tiles[n + this.col - 1]);\r\n        }\r\n        if (n % this.col < this.col - 1 && Math.floor(n / this.col) > 0) {// 右上\r\n            roundTiles.push(this.tiles[n - this.col + 1]);\r\n        }\r\n        if (n % this.col < this.col - 1 && Math.floor(n / this.col) < this.row-1) {// 右下\r\n            roundTiles.push(this.tiles[n + this.col + 1]);\r\n        }\r\n        return roundTiles;\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}