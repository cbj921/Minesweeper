{"version":3,"sources":["Game.js"],"names":["GAME_STATE","cc","Enum","PREPARE","PLAY","WIN","DEAD","TOUCH_STATE","BLANK","FLAG","Class","extends","Component","properties","tilesLayout","Node","tile","Prefab","btnStart","tiles","picPrepare","SpriteFrame","picPlay","picWin","picDead","gameState","default","type","touchState","row","col","bombNum","onLoad","Tile","require","self","r","c","genTile","instantiate","name","String","on","EventType","MOUSE_UP","event","getButton","Event","EventMouse","BUTTON_LEFT","BUTTON_RIGHT","onTouchTile","addChild","push","newGame","tilesLength","length","n","getComponent","ClickType","TYPE","ZERO","state","STATE","NONE","tilesIndex","i","b","Math","floor","random","BOMB","splice","tempBomb","roundTiles","tileRound","m","Sprite","touchTile","CLICK","gameOver","testTiles","testTile","pop","parseInt","judgeWin","DOUBT","console","log","confNum","spriteFrame","onBtnShow"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["const GAME_STATE = cc.Enum({\r\n    PREPARE: 0,\r\n    PLAY: 1,\r\n    WIN: 2,\r\n    DEAD: 3\r\n});\r\nconst TOUCH_STATE = cc.Enum({\r\n    BLANK: 0,\r\n    FLAG: 1,\r\n});\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        tilesLayout: cc.Node,\r\n        tile: cc.Prefab,\r\n        btnStart: cc.Node,\r\n        tiles: [], // 用数组保存所有tile引用\r\n        picPrepare: cc.SpriteFrame,\r\n        picPlay: cc.SpriteFrame,\r\n        picWin: cc.SpriteFrame,\r\n        picDead: cc.SpriteFrame,\r\n\r\n        gameState: {\r\n            default: GAME_STATE.PREPARE,\r\n            type: GAME_STATE,\r\n        },\r\n        touchState: {// 左键点开方块，右键标记flag，flag状态下再右键一次Doubt\r\n            default: TOUCH_STATE.BLANK,\r\n            type: TOUCH_STATE\r\n        },\r\n        row: 0,\r\n        col: 0,\r\n        bombNum: 0,\r\n\r\n    },\r\n\r\n    onLoad: function () {\r\n        this.Tile = require(\"Blank\"); // 获得Blank脚本中的状态量：STATE,TYPE\r\n        let self = this; // 将this赋值给self，好处就是在回调函数中self依旧对应的是this\r\n        for (let r = 0; r < this.row; r++) {\r\n            for (let c = 0; c < this.col; c++) {\r\n                let genTile = cc.instantiate(this.tile);\r\n                genTile.name = String(r * this.col + c); // 必须为 字符串 类型，否则会出错，将生成的方块名字命名为在 tiles数组 中的下标\r\n                genTile.on(cc.Node.EventType.MOUSE_UP, function (event) {\r\n                    // 对每一个生成的方块都开启 鼠标事件监听\r\n                    if (event.getButton() === cc.Event.EventMouse.BUTTON_LEFT) {\r\n                        self.touchState = TOUCH_STATE.BLANK;\r\n                    } else if (event.getButton() === cc.Event.EventMouse.BUTTON_RIGHT) {\r\n                        self.touchState = TOUCH_STATE.FLAG;\r\n                    }\r\n                    self.onTouchTile(genTile); // 这时候这里的是指每一个生成的方块。\r\n                });\r\n                this.tilesLayout.addChild(genTile);\r\n                this.tiles.push(genTile);\r\n            }\r\n        }\r\n        this.newGame();\r\n    },\r\n\r\n    newGame: function () {\r\n        let tilesLength = this.tiles.length;\r\n        // 初始化场景\r\n        for (let n = 0; n < tilesLength; n++) {\r\n            this.tiles[n].getComponent(\"Blank\").ClickType = this.Tile.TYPE.ZERO;\r\n            this.tiles[n].getComponent(\"Blank\").state = this.Tile.STATE.NONE;\r\n        }\r\n        // 添加雷\r\n        let tilesIndex = [];\r\n        for (let i = 0; i < tilesLength; i++) {\r\n            tilesIndex[i] = i; // 初始化方块数组，然后雷将随机填入其中，一维数组表示二维地图\r\n        }\r\n        for (let b = 0; b < this.bombNum; b++) {\r\n            let n = Math.floor(Math.random() * tilesIndex.length); // 随机炸弹位置\r\n            this.tiles[tilesIndex[n]].getComponent(\"Blank\").ClickType = this.Tile.TYPE.BOMB;\r\n            tilesIndex.splice(n, 1); // 删除第 n 个位置一个元素，避免重复放雷\r\n        }\r\n        // 标记雷周围的方块\r\n        for (let n = 0; n < tilesLength; n++) {\r\n            let tempBomb = 0;\r\n            if (this.tiles[n].getComponent(\"Blank\").ClickType == this.Tile.TYPE.ZERO) {\r\n                let roundTiles = this.tileRound(n);\r\n                for (let m = 0; m < roundTiles.length; m++) {\r\n                    if (roundTiles[m].getComponent(\"Blank\").ClickType == this.Tile.TYPE.BOMB) {\r\n                        tempBomb++;\r\n                    }\r\n                }\r\n                this.tiles[n].getComponent(\"Blank\").ClickType = tempBomb; // 周围有多少雷就标记几\r\n            }\r\n        }\r\n        this.gameState = GAME_STATE.PLAY;\r\n        this.btnStart.getComponent(cc.Sprite).SpriteFrame = this.picPlay;\r\n    },\r\n\r\n    // 返回 name 为 n 的 tile 的周围 tile 数组\r\n    tileRound: function (n) {// col表明每排有几个元素\r\n        // Math.floor(n/this.row)==15的时候就是最后一行了，n%this.col==29时就是最后一列\r\n        // 这里逻辑不能出错，一出错就运行失败\r\n        let roundTiles = [];\r\n        if (n % this.col > 0) {//left\r\n            roundTiles.push(this.tiles[n - 1]);\r\n        }\r\n        if (n % this.col < this.col - 1) {// right\r\n            roundTiles.push(this.tiles[n + 1]);\r\n        }\r\n        if (Math.floor(n / this.col) < this.row - 1) {// bottom\r\n            roundTiles.push(this.tiles[n + this.col]);\r\n        }\r\n        if (Math.floor(n / this.col) > 0) {// top\r\n            roundTiles.push(this.tiles[n - this.col]);\r\n        }\r\n        if (n % this.col > 0 && Math.floor(n / this.col) > 0) {// 左上\r\n            roundTiles.push(this.tiles[n - this.col - 1]);\r\n        }\r\n        if (n % this.col > 0 && Math.floor(n / this.col) < this.row - 1) {// 左下\r\n            roundTiles.push(this.tiles[n + this.col - 1]);\r\n        }\r\n        if (n % this.col < this.col - 1 && Math.floor(n / this.col) > 0) {// 右上\r\n            roundTiles.push(this.tiles[n - this.col + 1]);\r\n        }\r\n        if (n % this.col < this.col - 1 && Math.floor(n / this.col) < this.row - 1) {// 右下\r\n            roundTiles.push(this.tiles[n + this.col + 1]);\r\n        }\r\n        return roundTiles;\r\n    },\r\n\r\n    onTouchTile: function (touchTile) {\r\n        if (this.gameState != GAME_STATE.PLAY) {\r\n            return;\r\n        }\r\n        switch (this.touchState) {\r\n            case TOUCH_STATE.BLANK:\r\n                if (touchTile.getComponent(\"Blank\").ClickType === this.Tile.TYPE.BOMB) {\r\n                    touchTile.getComponent(\"Blank\").state = this.Tile.STATE.CLICK;\r\n                    this.gameOver(); // 点到炸弹游戏结束\r\n                    return;\r\n                }\r\n                let testTiles = []; // 定义一个栈\r\n                if (touchTile.getComponent(\"Blank\").state === this.Tile.STATE.NONE) {\r\n                    testTiles.push(touchTile);\r\n                    while (testTiles.length) {\r\n                        // 当栈不为空的时候\r\n                        let testTile = testTiles.pop();\r\n                        if (testTile.getComponent(\"Blank\").ClickType == this.Tile.TYPE.ZERO) {\r\n                            testTile.getComponent(\"Blank\").state = this.Tile.STATE.CLICK;\r\n                            let roundTiles = this.tileRound(parseInt(testTile.name));\r\n                            for (let i = 0; i < roundTiles.length; i++) {\r\n                                if (roundTiles[i].getComponent(\"Blank\").state == this.Tile.STATE.NONE) {\r\n                                    testTiles.push(roundTiles[i]);\r\n                                }\r\n                            }\r\n                        } else if (testTile.getComponent(\"Blank\").ClickType >0\r\n                            && testTile.getComponent(\"Blank\").ClickType <9) {\r\n                            testTile.getComponent(\"Blank\").state = this.Tile.STATE.CLICK;\r\n                        }\r\n                    }\r\n                    this.judgeWin();\r\n                }\r\n                break;\r\n\r\n            case TOUCH_STATE.FLAG:\r\n                if (touchTile.getComponent(\"Blank\").state == this.Tile.STATE.NONE) {\r\n                    touchTile.getComponent(\"Blank\").state = this.Tile.STATE.FLAG;\r\n                } else if (touchTile.getComponent(\"Blank\").state == this.Tile.STATE.FLAG) {\r\n                    touchTile.getComponent(\"Blank\").state = this.Tile.STATE.DOUBT;\r\n                } else {\r\n                    touchTile.getComponent(\"Blank\").state = this.Tile.STATE.NONE;\r\n                }\r\n                console.log(\"right click\");\r\n                break;\r\n\r\n            default: break;\r\n\r\n        }\r\n    },\r\n\r\n    judgeWin:function(){\r\n        var confNum = 0;\r\n        //判断是否胜利\r\n        for(let i=0;i<this.tiles.length;i++){\r\n            if(this.tiles[i].getComponent('Blank').state === this.Tile.STATE.CLICK){\r\n                confNum++;\r\n            }\r\n        }\r\n        if(confNum === this.tiles.length-this.bombNum){\r\n            this.gameState = GAME_STATE.WIN;\r\n            this.btnStart.getComponent(cc.Sprite).spriteFrame = this.picWin;\r\n        }\r\n    },\r\n\r\n    gameOver:function(){\r\n        this.gameState = GAME_STATE.DEAD;\r\n        this.btnStart.getComponent(cc.Sprite).spriteFrame = this.picDead;\r\n    },\r\n\r\n    onBtnShow:function(){\r\n        if(this.gameState === GAME_STATE.PREPARE){\r\n            this.newGame();\r\n        }\r\n        if(this.gameState === GAME_STATE.DEAD){\r\n            // this.bombNum--;\r\n            this.newGame();\r\n        }\r\n        if(this.gameState === GAME_STATE.WIN){\r\n            // this.bombNum++;\r\n            this.newGame();\r\n        }\r\n    }\r\n\r\n    // update (dt) {},\r\n});\r\n"]}