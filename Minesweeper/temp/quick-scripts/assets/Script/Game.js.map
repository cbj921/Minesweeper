{"version":3,"sources":["Game.js"],"names":["GAME_STATE","cc","Enum","PREPARE","PLAY","WIN","DEAD","TOUCH_STATE","BLANK","FLAG","DOUBT","Class","extends","Component","properties","tilesLayout","Node","tile","Prefab","btnStart","tiles","picPrepare","SpriteFrame","picPlay","picWin","picDead","gameState","default","type","touchState","row","col","bombNum","onLoad","Tile","require","self","r","c","genTile","instantiate","name","String","on","EventType","MOUSE_UP","event","getButton","Event","EventMouse","BUTTON_LEFT","BUTTON_RIGHT","addChild","push","newGame","start"],"mappings":";;;;;;AAAA,IAAMA,aAAaC,GAAGC,IAAH,CAAQ;AACvBC,aAAS,CADc;AAEvBC,UAAM,CAFiB;AAGvBC,SAAK,CAHkB;AAIvBC,UAAM;AAJiB,CAAR,CAAnB;AAMA,IAAMC,cAAcN,GAAGC,IAAH,CAAQ;AACxBM,WAAO,CADiB;AAExBC,UAAM,CAFkB;AAGxBC,WAAO;AAHiB,CAAR,CAApB;;AAMAT,GAAGU,KAAH,CAAS;AACLC,aAASX,GAAGY,SADP;;AAGLC,gBAAY;AACRC,qBAAad,GAAGe,IADR;AAERC,cAAMhB,GAAGiB,MAFD;AAGRC,kBAAUlB,GAAGe,IAHL;AAIRI,eAAO,EAJC,EAIG;AACXC,oBAAYpB,GAAGqB,WALP;AAMRC,iBAAStB,GAAGqB,WANJ;AAORE,gBAAQvB,GAAGqB,WAPH;AAQRG,iBAASxB,GAAGqB,WARJ;;AAURI,mBAAW;AACPC,qBAAS3B,WAAWG,OADb;AAEPyB,kBAAM5B;AAFC,SAVH;AAcR6B,oBAAY,EAAC;AACTF,qBAASpB,YAAYC,KADb;AAERoB,kBAAMrB;AAFE,SAdJ;AAkBRuB,aAAK,CAlBG;AAmBRC,aAAK,CAnBG;AAoBRC,iBAAS;;AApBD,KAHP;;AA2BLC,YAAQ,kBAAY;AAChB,aAAKC,IAAL,GAAYC,QAAQ,OAAR,CAAZ,CADgB,CACc;AAC9B,YAAIC,OAAO,IAAX,CAFgB,CAEC;AACjB,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKP,GAAzB,EAA8BO,GAA9B,EAAmC;AAC/B,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKP,GAAzB,EAA8BO,GAA9B,EAAkC;AAC9B,oBAAIC,UAAUtC,GAAGuC,WAAH,CAAe,KAAKvB,IAApB,CAAd;AACAsB,wBAAQE,IAAR,GAAeC,OAAOL,IAAE,KAAKN,GAAP,GAAaO,CAApB,CAAf,CAF8B,CAEU;AACxCC,wBAAQI,EAAR,CAAW1C,GAAGe,IAAH,CAAQ4B,SAAR,CAAkBC,QAA7B,EAAsC,UAASC,KAAT,EAAe;AACjD;AACA,wBAAIA,MAAMC,SAAN,OAAsB9C,GAAG+C,KAAH,CAASC,UAAT,CAAoBC,WAA9C,EAA2D;AACvDd,6BAAKP,UAAL,GAAkBtB,YAAYC,KAA9B;AACH,qBAFD,MAEM,IAAGsC,MAAMC,SAAN,OAAsB9C,GAAG+C,KAAH,CAASC,UAAT,CAAoBE,YAA7C,EAA0D;AAC5D,4BAAGf,KAAKP,UAAL,KAAoBtB,YAAYC,KAAnC,EAAyC;AACrC4B,iCAAKP,UAAL,GAAkBtB,YAAYE,IAA9B;AACH;AACD,4BAAG2B,KAAKP,UAAL,KAAoBtB,YAAYE,IAAnC,EAAwC;AACpC2B,iCAAKP,UAAL,GAAkBtB,YAAYG,KAA9B;AACH,yBAFD,MAEM0B,KAAKP,UAAL,GAAkBtB,YAAYC,KAA9B;AACT;AACD;AACH,iBAbD;AAcA,qBAAKO,WAAL,CAAiBqC,QAAjB,CAA0Bb,OAA1B;AACA,qBAAKnB,KAAL,CAAWiC,IAAX,CAAgBd,OAAhB;AACH;AACJ;AACD,aAAKe,OAAL;AACH,KArDI;;AAuDLA,aAAS,mBAAU;AACf;;AAEH,KA1DI;;AA4DLC,SA5DK,mBA4DG,CAEP;AA9DI;;AAgEL;AAhEJ","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["const GAME_STATE = cc.Enum({\r\n    PREPARE: 0,\r\n    PLAY: 1,\r\n    WIN: 2,\r\n    DEAD: 3\r\n});\r\nconst TOUCH_STATE = cc.Enum({\r\n    BLANK: 0,\r\n    FLAG: 1,\r\n    DOUBT: 2\r\n});\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        tilesLayout: cc.Node,\r\n        tile: cc.Prefab,\r\n        btnStart: cc.Node,\r\n        tiles: [], // 用数组保存所有tile引用\r\n        picPrepare: cc.SpriteFrame,\r\n        picPlay: cc.SpriteFrame,\r\n        picWin: cc.SpriteFrame,\r\n        picDead: cc.SpriteFrame,\r\n\r\n        gameState: {\r\n            default: GAME_STATE.PREPARE,\r\n            type: GAME_STATE,\r\n        },\r\n        touchState: {// 左键点开方块，右键标记flag，flag状态下再右键一次Doubt\r\n            default: TOUCH_STATE.BLANK,\r\n            type: TOUCH_STATE\r\n        },\r\n        row: 0,\r\n        col: 0,\r\n        bombNum: 0,\r\n\r\n    },\r\n\r\n    onLoad: function () {\r\n        this.Tile = require(\"Blank\"); // 获得Blank脚本中的状态量：STATE,TYPE\r\n        let self = this; // 将this赋值给self，好处就是在回调函数中self依旧对应的是this\r\n        for (let r = 0; r < this.row; r++) {\r\n            for (let c = 0; c < this.col; c++){\r\n                let genTile = cc.instantiate(this.tile);\r\n                genTile.name = String(r*this.col + c) ; // 必须为 字符串 类型，否则会出错，将生成的方块名字命名为在 tiles数组 中的下标\r\n                genTile.on(cc.Node.EventType.MOUSE_UP,function(event){\r\n                    // 对每一个生成的方块都开启 鼠标事件监听\r\n                    if( event.getButton() === cc.Event.EventMouse.BUTTON_LEFT ){\r\n                        self.touchState = TOUCH_STATE.BLANK;\r\n                    }else if(event.getButton() === cc.Event.EventMouse.BUTTON_RIGHT){\r\n                        if(self.touchState === TOUCH_STATE.BLANK){\r\n                            self.touchState = TOUCH_STATE.FLAG;\r\n                        }\r\n                        if(self.touchState === TOUCH_STATE.FLAG){\r\n                            self.touchState = TOUCH_STATE.DOUBT;\r\n                        }else self.touchState = TOUCH_STATE.BLANK;\r\n                    }\r\n                    //self.onTouchTile(this); // 该函数还没写先注释，这时候这里的this又是啥？？？\r\n                });\r\n                this.tilesLayout.addChild(genTile);\r\n                this.tiles.push(genTile);\r\n            }\r\n        }\r\n        this.newGame();\r\n    },\r\n\r\n    newGame: function(){\r\n        // 初始化场景\r\n        \r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}